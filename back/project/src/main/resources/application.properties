# path 설정
server.servlet.context-path=/project
# 포트설정
server.port = 80

# 브라우저를 새로 고침하지 않고도 리소스의 변경 사항을 자동으로 감지
spring.devtools.livereload.enabled=true

# 코드 변경이 감지되면 애플리케이션을 자동으로 재시작
spring.devtools.restart.enabled=true

# MyBatis @Alias 설정된 DTO Model Location
mybatis.type-aliases-package=kr.co.ict.project.vo

# Xml Location
mybatis.mapper-locations=classpath:mappers/*.xml

# Oracle
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@3.38.106.198 :1521:xe
spring.datasource.username= bteam
spring.datasource.password= bteam

#jpa
spring.jpa.generate-ddl=true
spring.jpa.database=oracle
spring.jpa.show-sql=true

#Kakao
# 자동 생성되는 로그인 페이지에서 노출하는 등에 사용
spring.security.oauth2.client.registration.kakao.client-id = 27be1209a5e94ef12e0e5d5a27ae9161
spring.security.oauth2.client.registration.kakao.client-secret = ifoSW84ILZ0Rszl1U4eviIYvQo3CCJS7
spring.security.oauth2.client.registration.kakao.scope = profile_nickname
# spring.security.oauth2.client.registration.kakao.client-name = Kakao
# Oauth2의 유형 중 가장많이 사용되는 방식인 authorization_code 방식 사용
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
# 카카오가 사용자 확인 후 정보를 내 프로젝트로 보내주는 주소 패턴을 가지고있음
spring.security.oauth2.client.registration.kakao.redirect-uri = {baseUrl}/oauth2/callback/{registrationId}
###### provider 설정
# 인증을 요청하는 url을 작성
spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
# 토큰을 요청하는 url을 작성
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
# 회원 정보를 가져오는 url을 작성
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
# { "id":~, "kakao_account":{~}, "properties":{~} } 카카오는 위와같이 결과를 반환해준다. id로 지정
spring.security.oauth2.client.provider.kakao.user-name-attribute = id


secret-key=7ZWt7ZW0OTntmZTsnbTtjIXtlZzqta3snYTrhIjrqLjshLjqs4TroZzrgpjslYTqsIDsnpDtm4zrpa3tlZzqsJzrsJzsnpDrpbzrp4zrk6TslrTqsIDsnpA=

# naver oauth
spring.security.oauth2.client.registration.naver.client-id=HeVa3Jkhi0FaBM2ctFSG
spring.security.oauth2.client.registration.naver.client-secret=e61xB9q1JH
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email

# naver oauth2 provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Gmail 설정
spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username= dove5796@gmail.com
spring.mail.password= fnrz deto mxzw gmki
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true